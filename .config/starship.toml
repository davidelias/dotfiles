format = """
$username\
$hostname\
$shlvl\
$kubernetes\
$directory\
${custom.giturl}\
$git_branch\
$git_commit\
$git_state\
$git_status\
$docker_context\
$package\
$elixir\
$golang\
$nodejs\
$python\
$rust\
$terraform\
$memory_usage\
$aws\
$env_var\
${custom.ctversion}\
$cmd_duration\
$line_break\
$lua\
$jobs\
$battery\
$time\
$status\
$character"""

# Don't print a new line at the start of the prompt
add_newline = false

[character]
success_symbol = "[->](bold blue)"
error_symbol = "[->](bold red)"
vicmd_symbol = "[->](bold blue)"

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[battery]
full_symbol = ""
charging_symbol = "  "
discharging_symbol = "  "

[cmd_duration]
format="[took $duration]($style) "
style="dimmed white"

#[username]
#show_always = true

[python]
symbol = " "
pyenv_version_name = true
pyenv_prefix = ""
#disabled = true

#[aws]
#symbol = " "

[conda]
dsabled = true

[dart]
disabled = true

[directory]
read_only = " "
read_only_style = "yellow"

#[docker]
#symbol = " "

#[elixir]
#symbol = " "

[elm]
dsabled = true

#[git_branch]
#symbol = " "

#[golang]
#symbol = " "

# [haskell]
# disabled = true

[hg_branch]
disabled = true

[java]
disabled = true

[julia]
disabled = true

#[memory_usage]
#symbol = " "

[nim]
disabled = true

[nix_shell]
disabled = true

[nodejs]
symbol = " "
disabled = true

#[package]
#symbol = " "

[perl]
dsabled = true

[php]
disabled = true

[ruby]
disabled = true

[rust]
symbol = " "

[swift]
disabled = true

[custom.giturl]
# disabled = true
description = "Display symbol for remote Git server"
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
shell = ["bash", "--noprofile", "--norc"]
command = """
IFS="/"
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL"
IFS=" "
"""
style = "dimmed white"
format = "at [$output]($style)  "

[custom.ctversion]
command = "cat .cfg/version.json | jq -r .version"  # shows output of command
files = [".cfg/version.json"]       # can specify filters
when = """ test -f ".cfg/version.json" """
symbol = ""
style = "dimmed white"
format = "on [$symbol v$output]($style) "

